server
{
        listen       87;
        server_name  1.1.1.1;
        root   /usr/share/nginx/html;
        index  index.html index.htm;


        # add white ip
        include /etc/nginx/conf.d/ip.txt;


        # static repo files for cloning over https
        #location ~ ^/repo/*\.git/objects/([0-9a-f]+/[0-9a-f]+|pack/pack-[0-9a-f]+.(pack|idx))$
        location ~ ^.*/*\.git/objects/([0-9a-f]+/[0-9a-f]+|pack/pack-[0-9a-f]+.(pack|idx))$
        {
             root /usr/share/nginx/html;
        }


        # requests that need to go to git-http-backend
        #location ~ ^/repo/*\.git/(HEAD|info/refs|objects/info/.*|git-(upload|receive)-pack)$
        location ~ ^.*/*\.git/(HEAD|info/refs|objects/info/.*|git-(upload|receive)-pack)$
        {
            root /usr/share/nginx/html;

	    fastcgi_pass  127.0.0.1:9000;
	    #fastcgi_pass unix:/var/run/fcgiwrap.socket;
	    fastcgi_param SCRIPT_FILENAME   /usr/libexec/git-core/git-http-backend;
	    fastcgi_param PATH_INFO         $uri;
	    fastcgi_param GIT_PROJECT_ROOT  /usr/share/nginx/html;
            fastcgi_param GIT_HTTP_EXPORT_ALL "";
            fastcgi_param REMOTE_USER $remote_user;
            fastcgi_read_timeout 300;
	    include fastcgi_params;
	}


        # send anything else to gitweb if it's not a real file
        try_files $uri @gitweb;
        location @gitweb
        {
                auth_basic  "Git Status 204";
                auth_basic_user_file /etc/nginx/.fseuscokm;

	        fastcgi_pass  127.0.0.1:9000;
		#fastcgi_pass unix:/var/run/fcgiwrap.socket;
		fastcgi_param SCRIPT_FILENAME   /usr/share/nginx/html/static/gitweb.cgi;
		fastcgi_param PATH_INFO         $uri;
		fastcgi_param GITWEB_CONFIG     /usr/share/nginx/html/static/gitweb.conf;
		include fastcgi_params;

                allow 10.5.9.0/24;
                deny all;
	}


        access_log  /etc/nginx/logs/git87.log  main;
}
