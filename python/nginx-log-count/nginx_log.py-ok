#!/usr/local/python2711/bin/python
# *-* coding:utf-8 *-*


import re
import os
import sys
import time
import datetime
import subprocess
from time import clock as now
import smtplib
from email.mime.text import MIMEText
from email.mime.image import MIMEImage
from email.mime.multipart import MIMEMultipart
import socket
import fcntl
import struct


#time1 = now()


before = datetime.datetime.now() - datetime.timedelta(days=1)
beforedate = before.strftime("%Y-%m-%d")
#LOG_DIR = '/data/' + CP + '/' + ROLE + '/access_log'
backupdir = '/opt/domaincount/' + beforedate

## global var
lfile = backupdir + '/' + 'nimei2.txt'


def getfile():
     subprocess.Popen("mkdir -p " + backupdir, shell=True)

     #print "cd " + LOG_DIR + ' && ' + 'ls -lthr --time-style=long-iso | awk ' + "'" + '/' + beforedate + '/' + "'" + " | awk '{print $NF}'"
     flist = "cd " + LOG_DIR + ' && ' + 'ls -lthr --time-style=long-iso | awk ' + "'" + '/' + beforedate + '/' + "'" + " | awk '{print $NF}'"
     f2 = subprocess.Popen(flist, stdout=subprocess.PIPE, shell=True)
     f2.wait()
     file1 = f2.stdout.read().replace('\n', ' ')


     if len(file1):
     #if os.path.exists(LOG_DIR + '/' + file1):
         #print "cd " + LOG_DIR + ' && ' + "cat  " + file1 + '> ' + lfile
         file2 = "cd " + LOG_DIR + ' && ' + "cat  " + file1 + '> ' + lfile
         f1 = subprocess.Popen(file2, shell=True)
         f1.wait()
     else:
         #print LOG_DIR + ' file is not exists'
         return 0


def getip(ifname):
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    return socket.inet_ntoa(fcntl.ioctl(
        s.fileno(),
        0x8915,  # SIOCGIFADDR
        struct.pack('256s', ifname[:15])
    )[20:24])


def treatfile(log_path = lfile):
    ip_info = {}


    new_ip_info = {}

    with open(log_path,'r') as f:
        for line in f.readlines():

            line = line.strip()

            if not len(line):
                continue


            ## 获取client ip
            #ip = line.split('の')[2]
            #print ip


            ## 获取client access domain
            try:
                domain = line.split('の')[4]
            except IndexError,e:
                #print "error: domain %s" % e
                continue


            ## 获取client acces url
            #url = line.split('の')[5]
            #print url


            #if ip not in ip_info:
            #    ip_info[ip] = {url:1}
            #else:
            #    if url not in ip_info[ip]:
            #        ip_info[ip][url] = 1
            #    else:
            #        ip_info[ip][url] += 1


            if domain not in ip_info:
                ip_info[domain] = 1
            else:
                ip_info[domain] += 1

    ## 删除字典中key值是-的元素
    if '-' in ip_info.keys():
        del ip_info['-']


    old_result = sorted(ip_info.items(), lambda x, y: cmp(x[1], y[1]), reverse=True)[0:23]


    ## re.search()
    for k,v in old_result:
        if re.search(r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$', k) != None:
            continue
        elif re.search(r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}:(\d+)$', k) != None:
            continue

        new_ip_info[k] = v


    ## re.match()
    #for k,v in old_result:
    #    if re.match(r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$', k) != None:
    #        continue
    #    elif re.match(r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}:(\d+)$', k) != None:
    #        continue

    #    new_ip_info[k] = v


    ## 模糊匹配,同时匹配IP和IP:PORT
    #for k,v in old_result:
    #    if re.match(r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}', k) != None:
    #        continue

    #    new_ip_info[k] = v

    new_result = sorted(new_ip_info.items(), lambda x, y: cmp(x[1], y[1]), reverse=True)


    for k,v in new_result:
        # python 2.6.6
        #print CP + ' ' + '{0} {1}'.format(str(v),k)
        #print ("%-5s" % CP) + ("%-10d" % v) + ("%-10s" % k)
        result2 = ("%-5s" % CP) + ',' + ("%-10d" % v) + ',' + ("%-10s" % k) + '\n'
        #result2 = CP + ',' + '{1},{0}'.format(str(v),k) + '\n'

        # python 2.7.11
        #print '{:10s} {:<10s}'.format(str(v),k)
        #result2 = '{:10s} {:<10s}'.format(str(v),k) + '\n'

        with open(result3, 'a+') as f2:
            f2.write(result2)
        f2.close()

    f.close()


## sendmail
def SendMail():
    HOST = "1.1.1.1"
    PORT = "25"
    SUBJECT = u"产品域名统计 from %s" % getip('eth0')
    TO = ["to_mail1","to_mail2"]
    FROM = "from_mail"
    CC = ["cc_mail"]


    tolist = ','.join(TO)
    cclist = ','.join(CC)


    msgtext2 = MIMEText(beforedate + '' + '排名前20的域名:' + '\n' + open(result3,"rb").read().replace(',',' '))
    msgtext1 = MIMEText("""
        <table width="800" border="0" cellspacing="0" cellpadding="4">
            <tr>
                <td bgcolor="#CECFAD" height="20" style="font-size:14px">排名前20的域名: <a href="www.w66.com">点我点我</a></td>
            </tr>

        </table>""","html","utf-8")


    msg = MIMEMultipart()
    #msg.attach(msgtext1)
    msg.attach(msgtext2)


    #print result3
    attach = MIMEText(open(result3,"rb").read(), "base64", "utf-8")
    attach["Content-Type"] = "application/octet-stream"
    attach["Content-Disposition"] = "attachment; filename=\"web_domain_count.csv\"".decode("utf-8").encode("utf-8")
    msg.attach(attach)


    msg['Subject'] = SUBJECT
    msg['From'] = FROM
    msg['To'] = tolist
    msg['Cc'] = cclist


    try:
        server = smtplib.SMTP()
        server.connect(HOST, PORT)
        #server.starttls()
        #server.login("test@gmail.com","123456")
        server.sendmail(FROM, TO + CC, msg.as_string())
        server.quit()
        #print "send mail success!"
    except Exception, e:
        print "Error: " + str(e)



if __name__ == "__main__":
    CPS = ['A01', 'A03', 'A04', 'A05', 'A07', 'B01', 'C02', 'E02', 'E03', 'E04']
    ROLE = 'web'

    result3 = backupdir + '/' + 'web_domain_count.csv'
    os.system('rm -f ' + result3)

    for CP in CPS:
        #print '-------------%s-----------' % CP
        LOG_DIR = '/data/' + CP + '/' + ROLE + '/access_log'
        if getfile() is 0:
            print
            continue
        treatfile()
        #print

    SendMail()
    time2 = now()
    #print
    #print 'run time is ' + str(time2 - time1) + 's'
